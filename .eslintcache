[{"F:\\javascript\\REACT\\react-material-admin\\src\\index.js":"1","F:\\javascript\\REACT\\react-material-admin\\src\\components\\App.js":"2","F:\\javascript\\REACT\\react-material-admin\\src\\serviceWorker.js":"3","F:\\javascript\\REACT\\react-material-admin\\src\\context\\UserContext.js":"4","F:\\javascript\\REACT\\react-material-admin\\src\\context\\LayoutContext.js":"5","F:\\javascript\\REACT\\react-material-admin\\src\\themes\\index.js":"6","F:\\javascript\\REACT\\react-material-admin\\src\\components\\Layout\\Layout.js":"7","F:\\javascript\\REACT\\react-material-admin\\src\\pages\\error\\Error.js":"8","F:\\javascript\\REACT\\react-material-admin\\src\\pages\\login\\Login.js":"9","F:\\javascript\\REACT\\react-material-admin\\src\\themes\\default.js":"10","F:\\javascript\\REACT\\react-material-admin\\src\\pages\\products\\AddProduct.js":"11","F:\\javascript\\REACT\\react-material-admin\\src\\pages\\login\\styles.js":"12","F:\\javascript\\REACT\\react-material-admin\\src\\pages\\error\\styles.js":"13","F:\\javascript\\REACT\\react-material-admin\\src\\components\\Layout\\styles.js":"14","F:\\javascript\\REACT\\react-material-admin\\src\\pages\\products\\Products.js":"15","F:\\javascript\\REACT\\react-material-admin\\src\\pages\\tables\\Tables.js":"16","F:\\javascript\\REACT\\react-material-admin\\src\\pages\\maps\\Maps.js":"17","F:\\javascript\\REACT\\react-material-admin\\src\\pages\\notifications\\Notifications.js":"18","F:\\javascript\\REACT\\react-material-admin\\src\\pages\\typography\\Typography.js":"19","F:\\javascript\\REACT\\react-material-admin\\src\\pages\\charts\\Charts.js":"20","F:\\javascript\\REACT\\react-material-admin\\src\\pages\\dashboard\\Dashboard.js":"21","F:\\javascript\\REACT\\react-material-admin\\src\\components\\Sidebar\\Sidebar.js":"22","F:\\javascript\\REACT\\react-material-admin\\src\\components\\Header\\Header.js":"23","F:\\javascript\\REACT\\react-material-admin\\src\\pages\\icons\\Icons.js":"24","F:\\javascript\\REACT\\react-material-admin\\src\\pages\\dashboard\\mock.js":"25","F:\\javascript\\REACT\\react-material-admin\\src\\pages\\maps\\styles.js":"26","F:\\javascript\\REACT\\react-material-admin\\src\\pages\\dashboard\\components\\Table\\Table.js":"27","F:\\javascript\\REACT\\react-material-admin\\src\\components\\PageTitle\\PageTitle.js":"28","F:\\javascript\\REACT\\react-material-admin\\src\\components\\Sidebar\\components\\Dot.js":"29","F:\\javascript\\REACT\\react-material-admin\\src\\components\\Wrappers\\Wrappers.js":"30","F:\\javascript\\REACT\\react-material-admin\\src\\components\\Widget\\Widget.js":"31","F:\\javascript\\REACT\\react-material-admin\\src\\components\\PageTitle\\styles.js":"32","F:\\javascript\\REACT\\react-material-admin\\src\\pages\\dashboard\\styles.js":"33","F:\\javascript\\REACT\\react-material-admin\\src\\pages\\icons\\styles.js":"34","F:\\javascript\\REACT\\react-material-admin\\src\\components\\Header\\styles.js":"35","F:\\javascript\\REACT\\react-material-admin\\src\\pages\\typography\\styles.js":"36","F:\\javascript\\REACT\\react-material-admin\\src\\components\\Sidebar\\styles.js":"37","F:\\javascript\\REACT\\react-material-admin\\src\\pages\\notifications\\styles.js":"38","F:\\javascript\\REACT\\react-material-admin\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js":"39","F:\\javascript\\REACT\\react-material-admin\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js":"40","F:\\javascript\\REACT\\react-material-admin\\src\\pages\\charts\\components\\ApexLineChart.js":"41","F:\\javascript\\REACT\\react-material-admin\\src\\pages\\charts\\components\\ApexHeatmap.js":"42","F:\\javascript\\REACT\\react-material-admin\\src\\components\\Notification\\Notification.js":"43","F:\\javascript\\REACT\\react-material-admin\\src\\components\\UserAvatar\\UserAvatar.js":"44","F:\\javascript\\REACT\\react-material-admin\\src\\components\\Widget\\styles.js":"45","F:\\javascript\\REACT\\react-material-admin\\src\\pages\\dashboard\\components\\BigStat\\styles.js":"46","F:\\javascript\\REACT\\react-material-admin\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js":"47","F:\\javascript\\REACT\\react-material-admin\\src\\components\\UserAvatar\\styles.js":"48","F:\\javascript\\REACT\\react-material-admin\\src\\components\\Notification\\styles.js":"49","F:\\javascript\\REACT\\react-material-admin\\src\\pages\\products\\EditProduct.js":"50","F:\\javascript\\REACT\\react-material-admin\\src\\pages\\Orders\\Orders.js":"51","F:\\javascript\\REACT\\react-material-admin\\src\\pages\\profile\\Profile.js":"52"},{"size":896,"mtime":1651236496678,"results":"53","hashOfConfig":"54"},{"size":1787,"mtime":1652187313849,"results":"55","hashOfConfig":"54"},{"size":5083,"mtime":1651236496730,"results":"56","hashOfConfig":"54"},{"size":3186,"mtime":1652280006458,"results":"57","hashOfConfig":"54"},{"size":1444,"mtime":1651236496676,"results":"58","hashOfConfig":"54"},{"size":534,"mtime":1651236496732,"results":"59","hashOfConfig":"54"},{"size":5208,"mtime":1652273447100,"results":"60","hashOfConfig":"54"},{"size":1626,"mtime":1651236496715,"results":"61","hashOfConfig":"54"},{"size":13803,"mtime":1652277506072,"results":"62","hashOfConfig":"54"},{"size":3127,"mtime":1651236496731,"results":"63","hashOfConfig":"54"},{"size":17407,"mtime":1652358353410,"results":"64","hashOfConfig":"54"},{"size":3307,"mtime":1652362544293,"results":"65","hashOfConfig":"54"},{"size":1395,"mtime":1651236496716,"results":"66","hashOfConfig":"54"},{"size":710,"mtime":1651236496663,"results":"67","hashOfConfig":"54"},{"size":5317,"mtime":1652364032900,"results":"68","hashOfConfig":"54"},{"size":2146,"mtime":1651236496728,"results":"69","hashOfConfig":"54"},{"size":1010,"mtime":1651236496724,"results":"70","hashOfConfig":"54"},{"size":13862,"mtime":1651236496726,"results":"71","hashOfConfig":"54"},{"size":4632,"mtime":1651236496729,"results":"72","hashOfConfig":"54"},{"size":5790,"mtime":1651236496679,"results":"73","hashOfConfig":"54"},{"size":19356,"mtime":1652271977452,"results":"74","hashOfConfig":"54"},{"size":4827,"mtime":1652360343505,"results":"75","hashOfConfig":"54"},{"size":10460,"mtime":1651508711682,"results":"76","hashOfConfig":"54"},{"size":391433,"mtime":1651236496720,"results":"77","hashOfConfig":"54"},{"size":4288,"mtime":1651236496713,"results":"78","hashOfConfig":"54"},{"size":178,"mtime":1651236496725,"results":"79","hashOfConfig":"54"},{"size":1323,"mtime":1651236496713,"results":"80","hashOfConfig":"54"},{"size":447,"mtime":1651236496666,"results":"81","hashOfConfig":"54"},{"size":902,"mtime":1651236496669,"results":"82","hashOfConfig":"54"},{"size":3971,"mtime":1651236496675,"results":"83","hashOfConfig":"54"},{"size":2581,"mtime":1651236496673,"results":"84","hashOfConfig":"54"},{"size":482,"mtime":1651236496667,"results":"85","hashOfConfig":"54"},{"size":3000,"mtime":1651236496714,"results":"86","hashOfConfig":"54"},{"size":812,"mtime":1651236496721,"results":"87","hashOfConfig":"54"},{"size":4043,"mtime":1651236496661,"results":"88","hashOfConfig":"54"},{"size":389,"mtime":1651236496730,"results":"89","hashOfConfig":"54"},{"size":1391,"mtime":1652361480126,"results":"90","hashOfConfig":"54"},{"size":1943,"mtime":1651236496727,"results":"91","hashOfConfig":"54"},{"size":4589,"mtime":1651236496670,"results":"92","hashOfConfig":"54"},{"size":4160,"mtime":1651236496712,"results":"93","hashOfConfig":"54"},{"size":1396,"mtime":1651236496680,"results":"94","hashOfConfig":"54"},{"size":1909,"mtime":1651236496680,"results":"95","hashOfConfig":"54"},{"size":3413,"mtime":1651236496665,"results":"96","hashOfConfig":"54"},{"size":620,"mtime":1651236496672,"results":"97","hashOfConfig":"54"},{"size":1015,"mtime":1651236496674,"results":"98","hashOfConfig":"54"},{"size":1075,"mtime":1651236496712,"results":"99","hashOfConfig":"54"},{"size":1384,"mtime":1652361433397,"results":"100","hashOfConfig":"54"},{"size":291,"mtime":1651236496672,"results":"101","hashOfConfig":"54"},{"size":1040,"mtime":1651236496666,"results":"102","hashOfConfig":"54"},{"size":21456,"mtime":1652359547076,"results":"103","hashOfConfig":"54"},{"size":5280,"mtime":1652277506023,"results":"104","hashOfConfig":"54"},{"size":7673,"mtime":1652352763275,"results":"105","hashOfConfig":"54"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"1m4afb2",{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"108"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"108"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"108"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"108"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"108"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"108"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\javascript\\REACT\\react-material-admin\\src\\index.js",[],["217","218"],"F:\\javascript\\REACT\\react-material-admin\\src\\components\\App.js",[],"F:\\javascript\\REACT\\react-material-admin\\src\\serviceWorker.js",[],"F:\\javascript\\REACT\\react-material-admin\\src\\context\\UserContext.js",["219"],"import axios from \"axios\";\r\nimport React from \"react\";\r\n\r\nvar UserStateContext = React.createContext();\r\nvar UserDispatchContext = React.createContext();\r\n\r\nfunction userReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"LOGIN_SUCCESS\":\r\n      return { ...state, isAuthenticated: true };\r\n    case \"SIGN_OUT_SUCCESS\":\r\n      return { ...state, isAuthenticated: false };\r\n    default: {\r\n      throw new Error(`Unhandled action type: ${action.type}`);\r\n    }\r\n  }\r\n}\r\n\r\nfunction UserProvider({ children }) {\r\n  var [state, dispatch] = React.useReducer(userReducer, {\r\n    isAuthenticated: !!localStorage.getItem(\"id_token\"),\r\n  });\r\n\r\n  return (\r\n    <UserStateContext.Provider value={state}>\r\n      <UserDispatchContext.Provider value={dispatch}>\r\n        {children}\r\n      </UserDispatchContext.Provider>\r\n    </UserStateContext.Provider>\r\n  );\r\n}\r\n\r\nfunction useUserState() {\r\n  var context = React.useContext(UserStateContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useUserState must be used within a UserProvider\");\r\n  }\r\n  return context;\r\n}\r\n\r\nfunction useUserDispatch() {\r\n  var context = React.useContext(UserDispatchContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useUserDispatch must be used within a UserProvider\");\r\n  }\r\n  return context;\r\n}\r\n\r\nexport { UserProvider, useUserState, useUserDispatch, loginUser, signOut };\r\n\r\n// ###########################################################\r\n\r\nfunction loginUser(dispatch, login, password, history, setIsLoading, setError) {\r\n  setError(false);\r\n  setIsLoading(true);\r\n\r\n  if (!!login && !!password) {\r\n      var formdata = new FormData();\r\n            formdata.append(\"email\", login);\r\n            formdata.append(\"password\", password);\r\n            axios({\r\n                method: 'POST',\r\n                url: `https://cybercitiesapi.developer-um.xyz/api/seller/login`,\r\n                data: formdata,\r\n            }).then((response) => {\r\n                // console.log(\"response\", response)\r\n                const Data = response.data\r\n                if (response.status == 200) {\r\n                  localStorage.setItem('id_token', Data.token)\r\n                  localStorage.setItem('user',JSON.stringify(Data.seller) )\r\n      setError(null)\r\n      setIsLoading(false)\r\n      dispatch({ type: 'LOGIN_SUCCESS' })\r\n\r\n      history.push('/app/dashboard')\r\n                    // Swal.fire({\r\n                    //     title: \"Success\",\r\n                    //     text: \"Login Successfull\",\r\n                    //     icon: \"success\",\r\n                    // });\r\n                    // localStorage.setItem(\"Usertoken\",Data?.token)\r\n                    // localStorage.setItem(\"User\",JSON.stringify(Data?.user))\r\n                    // history.push(\"/dashbaord\")\r\n                }\r\n                else {\r\n                  dispatch({ type: \"LOGIN_FAILURE\" });\r\n                  setError(true);\r\n                  setIsLoading(false);\r\n                }\r\n              })\r\n  \r\n}\r\n}\r\n\r\nfunction signOut(dispatch, history) {\r\n  localStorage.removeItem(\"id_token\");\r\n  localStorage.removeItem(\"user\");\r\n  dispatch({ type: \"SIGN_OUT_SUCCESS\" });\r\n  history.push(\"/login\");\r\n}\r\n","F:\\javascript\\REACT\\react-material-admin\\src\\context\\LayoutContext.js",[],"F:\\javascript\\REACT\\react-material-admin\\src\\themes\\index.js",[],"F:\\javascript\\REACT\\react-material-admin\\src\\components\\Layout\\Layout.js",["220","221","222","223","224","225","226","227"],"import React from \"react\";\r\nimport {\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n  withRouter,\r\n} from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\nimport {Box, IconButton, Link} from '@material-ui/core'\r\nimport Icon from '@mdi/react'\r\n\r\n//icons\r\nimport {\r\n  mdiFacebook as FacebookIcon,\r\n  mdiTwitter as TwitterIcon,\r\n  mdiGithub as GithubIcon,\r\n} from '@mdi/js'\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Header from \"../Header\";\r\nimport Sidebar from \"../Sidebar\";\r\n\r\n// pages\r\nimport Dashboard from \"../../pages/dashboard\";\r\nimport Products from \"../../pages/products/Products\";\r\nimport Typography from \"../../pages/typography\";\r\nimport Notifications from \"../../pages/notifications\";\r\nimport Maps from \"../../pages/maps\";\r\nimport Tables from \"../../pages/tables\";\r\nimport Icons from \"../../pages/icons\";\r\nimport Charts from \"../../pages/charts\";\r\n\r\n// context\r\nimport { useLayoutState } from \"../../context/LayoutContext\";\r\nimport AddProduct from \"../../pages/products/AddProduct\";\r\nimport EditProduct from \"../../pages/products/EditProduct\";\r\nimport Orders from \"../../pages/Orders/Orders\";\r\nimport Profile from \"../../pages/profile/Profile\";\r\n\r\nfunction Layout(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var layoutState = useLayoutState();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <>\r\n          <Header history={props.history} />\r\n          <Sidebar />\r\n          <div\r\n            className={classnames(classes.content, {\r\n              [classes.contentShift]: layoutState.isSidebarOpened,\r\n            })}\r\n          >\r\n            <div className={classes.fakeToolbar} />\r\n            <Switch>\r\n              <Route path=\"/app/dashboard\" component={Dashboard} />\r\n              <Route path=\"/app/products\" component={Products} />\r\n              <Route path=\"/app/product/:id\" component={EditProduct} />\r\n              <Route path=\"/app/addProduct\" component={AddProduct} />\r\n              <Route path=\"/app/profile\" component={Profile} />\r\n              <Route path=\"/app/orders\" component={Orders} />\r\n              <Route path=\"/app/typography\" component={Typography} />\r\n              {/* <Route path=\"/app/tables\" component={Tables} /> */}\r\n              <Route path=\"/app/notifications\" component={Notifications} />\r\n              <Route\r\n                exact\r\n                path=\"/app/ui\"\r\n                render={() => <Redirect to=\"/app/ui/icons\" />}\r\n              />\r\n              <Route path=\"/app/ui/maps\" component={Maps} />\r\n              <Route path=\"/app/ui/icons\" component={Icons} />\r\n              <Route path=\"/app/ui/charts\" component={Charts} />\r\n            </Switch>\r\n            {/* <Box\r\n              mt={5}\r\n              width={\"100%\"}\r\n              display={\"flex\"}\r\n              alignItems={\"center\"}\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <div>\r\n                <Link\r\n                  color={'primary'}\r\n                  href={'https://flatlogic.com/'}\r\n                  target={'_blank'}\r\n                  className={classes.link}\r\n                >\r\n                  Flatlogic\r\n                </Link>\r\n                <Link\r\n                  color={'primary'}\r\n                  href={'https://flatlogic.com/about'}\r\n                  target={'_blank'}\r\n                  className={classes.link}\r\n                >\r\n                  About Us\r\n                </Link>\r\n                <Link\r\n                  color={'primary'}\r\n                  href={'https://flatlogic.com/blog'}\r\n                  target={'_blank'}\r\n                  className={classes.link}\r\n                >\r\n                  Blog\r\n                </Link>\r\n              </div>\r\n              <div>\r\n                <Link\r\n                  href={'https://www.facebook.com/flatlogic'}\r\n                  target={'_blank'}\r\n                >\r\n                  <IconButton aria-label=\"facebook\">\r\n                    <Icon\r\n                      path={FacebookIcon}\r\n                      size={1}\r\n                      color=\"#6E6E6E99\"\r\n                    />\r\n                  </IconButton>\r\n                </Link>\r\n                <Link\r\n                  href={'https://twitter.com/flatlogic'}\r\n                  target={'_blank'}\r\n                >\r\n                  <IconButton aria-label=\"twitter\">\r\n                    <Icon\r\n                      path={TwitterIcon}\r\n                      size={1}\r\n                      color=\"#6E6E6E99\"\r\n                    />\r\n                  </IconButton>\r\n                </Link>\r\n                <Link\r\n                  href={'https://github.com/flatlogic'}\r\n                  target={'_blank'}\r\n                >\r\n                  <IconButton\r\n                    aria-label=\"github\"\r\n                    style={{marginRight: -12}}\r\n                  >\r\n                    <Icon\r\n                      path={GithubIcon}\r\n                      size={1}\r\n                      color=\"#6E6E6E99\"\r\n                    />\r\n                  </IconButton>\r\n                </Link>\r\n              </div>\r\n            </Box> */}\r\n          </div>\r\n        </>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Layout);\r\n","F:\\javascript\\REACT\\react-material-admin\\src\\pages\\error\\Error.js",[],"F:\\javascript\\REACT\\react-material-admin\\src\\pages\\login\\Login.js",["228","229","230"],"import React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  CircularProgress,\r\n  Typography,\r\n  Button,\r\n  Tabs,\r\n  Tab,\r\n  TextField,\r\n  Fade,\r\n} from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// logo\r\nimport logo from \"./logo.svg\";\r\nimport google from \"../../images/google.svg\";\r\n\r\n// context\r\nimport { useUserDispatch, loginUser } from \"../../context/UserContext\";\r\nimport axios from \"axios\";\r\n\r\nfunction Login(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var userDispatch = useUserDispatch();\r\n\r\n  // local\r\n  var [isLoading, setIsLoading] = useState(false);\r\n  var [error, setError] = useState(null);\r\n  var [activeTabId, setActiveTabId] = useState(0);\r\n  var [nameValue, setNameValue] = useState(\"\");\r\n  var [company, setCompany] = useState(\"\");\r\n  var [phone, setPhone] = useState(\"\");\r\n  var [city, setCity] = useState(\"\");\r\n  var [state, setState] = useState(\"\");\r\n  var [address, setAddress] = useState(\"\");\r\n  var [loginValue, setLoginValue] = useState(\"seller@gmail.com\");\r\n  var [passwordValue, setPasswordValue] = useState(\"12345678\");\r\n\r\n  const handleSubmit = async () => {\r\n    let formData = new FormData();\r\n    formData.append(\"email\", loginValue);\r\n    formData.append(\"password\", passwordValue);\r\n    formData.append(\"name\", nameValue);\r\n    formData.append(\"company\", company);\r\n    formData.append(\"phone\", phone);\r\n    formData.append(\"city\", city);\r\n    formData.append(\"state\", state);\r\n    formData.append(\"address\", address);\r\n    axios({\r\n      method: \"POST\",\r\n      url: `https://cybercitiesapi.developer-um.xyz/api/seller/register`,\r\n      data: formData,\r\n    })\r\n      .then((response) => {\r\n        // console.log(\"response\", response)\r\n        const Data = response.data;\r\n        if (response?.data?.Success == 200) {\r\n          console.log(response);\r\n          Swal.fire({\r\n            title: \"Success\",\r\n            text: \"Successfully Registered\",\r\n            icon: \"success\",\r\n          });\r\n          \r\n        } \r\n        if(Data?.errors?.email){\r\n          Swal.fire({\r\n            title: \"Error\",\r\n            text: \"Email already exists\",\r\n            icon: \"error\",\r\n          });\r\n        }\r\n        else {\r\n          \r\n          Swal.fire({\r\n            title: \"Error\",\r\n            text: \"Something went wrong\",\r\n            icon: \"error\",\r\n          });\r\n          console.log(\"error\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        \r\n        Swal.fire({\r\n          title: \"Error\",\r\n          text: \"Something went wrong\",\r\n          icon: \"error\",\r\n        });\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <Grid container className={classes.container}>\r\n      <div className={classes.logotypeContainer}>\r\n        <img src={logo} alt=\"logo\" className={classes.logotypeImage} />\r\n        <Typography className={classes.logotypeText}>Cyber Cities</Typography>\r\n      </div>\r\n      <div className={classes.formContainer}>\r\n        <div className={classes.form}>\r\n          <Tabs\r\n            value={activeTabId}\r\n            onChange={(e, id) => setActiveTabId(id)}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            centered\r\n          >\r\n            <Tab label=\"Login\" classes={{ root: classes.tab }} />\r\n            <Tab label=\"New User\" classes={{ root: classes.tab }} />\r\n          </Tabs>\r\n          {activeTabId === 0 && (\r\n            <React.Fragment>\r\n              {/* <Button size=\"large\" className={classes.googleButton}>\r\n                <img src={google} alt=\"google\" className={classes.googleIcon} />\r\n                &nbsp;Sign in with Google\r\n              </Button> */}\r\n              <div className={classes.formDividerContainer}>\r\n                {/* <div className={classes.formDivider} />\r\n                <Typography className={classes.formDividerWord}>or</Typography>\r\n                <div className={classes.formDivider} /> */}\r\n              </div>\r\n              <Fade in={error}>\r\n                <Typography color=\"secondary\" className={classes.errorMessage}>\r\n                  Something is wrong with your login or password :(\r\n                </Typography>\r\n              </Fade>\r\n              <TextField\r\n                id=\"email\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={loginValue}\r\n                onChange={(e) => setLoginValue(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Email Adress\"\r\n                type=\"email\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                id=\"password\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={passwordValue}\r\n                onChange={(e) => setPasswordValue(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Password\"\r\n                type=\"password\"\r\n                fullWidth\r\n              />\r\n              <div className={classes.formButtons}>\r\n                {isLoading ? (\r\n                  <CircularProgress size={26} className={classes.loginLoader} />\r\n                ) : (\r\n                  <Button\r\n                    disabled={\r\n                      loginValue.length === 0 || passwordValue.length === 0\r\n                    }\r\n                    onClick={() =>\r\n                      loginUser(\r\n                        userDispatch,\r\n                        loginValue,\r\n                        passwordValue,\r\n                        props.history,\r\n                        setIsLoading,\r\n                        setError,\r\n                      )\r\n                    }\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                  >\r\n                    Login\r\n                  </Button>\r\n                )}\r\n                {/* <Button\r\n                  color=\"primary\"\r\n                  size=\"large\"\r\n                  className={classes.forgetButton}\r\n                >\r\n                  Forget Password\r\n                </Button> */}\r\n              </div>\r\n            </React.Fragment>\r\n          )}\r\n          {activeTabId === 1 && (\r\n            <React.Fragment>\r\n              <Typography variant=\"h1\" className={classes.greeting}>\r\n                Welcome!\r\n              </Typography>\r\n              <Typography variant=\"h2\" className={classes.subGreeting}>\r\n                Create your account\r\n              </Typography>\r\n              <Fade in={error}>\r\n                <Typography color=\"secondary\" className={classes.errorMessage}>\r\n                  Something is wrong with your login or password :(\r\n                </Typography>\r\n              </Fade>\r\n\r\n              <TextField\r\n                id=\"name\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={nameValue}\r\n                onChange={(e) => setNameValue(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Full Name\"\r\n                type=\"text\"\r\n                fullWidth\r\n              />\r\n\r\n              <TextField\r\n                id=\"email\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={loginValue}\r\n                onChange={(e) => setLoginValue(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Email Adress\"\r\n                type=\"email\"\r\n                fullWidth\r\n              />\r\n\r\n              <TextField\r\n                id=\"password\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={passwordValue}\r\n                onChange={(e) => setPasswordValue(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Password\"\r\n                type=\"password\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                id=\"company\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={company}\r\n                onChange={(e) => setCompany(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Company\"\r\n                type=\"text\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                id=\"phone\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={phone}\r\n                onChange={(e) => setPhone(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Phone No.\"\r\n                type=\"text\"\r\n                fullWidth\r\n              />\r\n              <Grid container alignItems=\"flex-start\" spacing={6}>\r\n                <Grid item xs={6}>\r\n                  <TextField\r\n                    id=\"state\"\r\n                    InputProps={{\r\n                      classes: {\r\n                        underline: classes.textFieldUnderline,\r\n                        input: classes.textField,\r\n                      },\r\n                    }}\r\n                    value={state}\r\n                    onChange={(e) => setState(e.target.value)}\r\n                    margin=\"normal\"\r\n                    placeholder=\"State\"\r\n                    type=\"text\"\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <TextField\r\n                    id=\"city\"\r\n                    InputProps={{\r\n                      classes: {\r\n                        underline: classes.textFieldUnderline,\r\n                        input: classes.textField,\r\n                      },\r\n                    }}\r\n                    value={city}\r\n                    onChange={(e) => setCity(e.target.value)}\r\n                    margin=\"normal\"\r\n                    placeholder=\"City\"\r\n                    type=\"text\"\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <TextField\r\n                id=\"address\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={address}\r\n                onChange={(e) => setAddress(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Address\"\r\n                type=\"text\"\r\n                fullWidth\r\n              />\r\n              <div className={classes.creatingButtonContainer}>\r\n                {isLoading ? (\r\n                  <CircularProgress size={26} />\r\n                ) : (\r\n                  <Button\r\n                    onClick={() =>\r\n                    handleSubmit()\r\n                    }\r\n                    disabled={\r\n                      loginValue.length === 0 ||\r\n                      passwordValue.length === 0 ||\r\n                      nameValue.length === 0 ||\r\n                      company.length === 0 ||\r\n                      phone.length === 0 ||\r\n                      state.length === 0 ||\r\n                      city.length === 0 || \r\n                      address.length === 0 \r\n                    }\r\n                    size=\"large\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    fullWidth\r\n                    className={classes.createAccountButton}\r\n                  >\r\n                    Create your account\r\n                  </Button>\r\n                )}\r\n              </div>\r\n              {/* <div className={classes.formDividerContainer}>\r\n                <div className={classes.formDivider} />\r\n                <Typography className={classes.formDividerWord}>or</Typography>\r\n                <div className={classes.formDivider} />\r\n              </div> */}\r\n              {/* <Button\r\n                size=\"large\"\r\n                className={classnames(\r\n                  classes.googleButton,\r\n                  classes.googleButtonCreating,\r\n                )}\r\n              >\r\n                <img src={google} alt=\"google\" className={classes.googleIcon} />\r\n                &nbsp;Sign in with Google\r\n              </Button> */}\r\n            </React.Fragment>\r\n          )}\r\n        </div>\r\n        {/* <Typography color=\"primary\" className={classes.copyright}>\r\n          © {new Date().getFullYear()}{\" \"}\r\n          <a\r\n            style={{ textDecoration: \"none\", color: \"inherit\" }}\r\n            href=\"https://cyeber-cities.web.app/\"\r\n            rel=\"noopener noreferrer\"\r\n            target=\"_blank\"\r\n          >\r\n            Cyber Cities\r\n          </a>\r\n          ,All rights reserved.\r\n        </Typography> */}\r\n      </div>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default withRouter(Login);\r\n","F:\\javascript\\REACT\\react-material-admin\\src\\themes\\default.js",[],"F:\\javascript\\REACT\\react-material-admin\\src\\pages\\products\\AddProduct.js",["231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248"],"F:\\javascript\\REACT\\react-material-admin\\src\\pages\\login\\styles.js",[],"F:\\javascript\\REACT\\react-material-admin\\src\\pages\\error\\styles.js",[],"F:\\javascript\\REACT\\react-material-admin\\src\\components\\Layout\\styles.js",[],"F:\\javascript\\REACT\\react-material-admin\\src\\pages\\products\\Products.js",["249","250","251","252","253","254","255","256","257","258"],"F:\\javascript\\REACT\\react-material-admin\\src\\pages\\tables\\Tables.js",[],"F:\\javascript\\REACT\\react-material-admin\\src\\pages\\maps\\Maps.js",[],"F:\\javascript\\REACT\\react-material-admin\\src\\pages\\notifications\\Notifications.js",[],"F:\\javascript\\REACT\\react-material-admin\\src\\pages\\typography\\Typography.js",[],"F:\\javascript\\REACT\\react-material-admin\\src\\pages\\charts\\Charts.js",[],"F:\\javascript\\REACT\\react-material-admin\\src\\pages\\dashboard\\Dashboard.js",["259","260","261","262","263","264","265","266","267","268"],"import React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  LinearProgress,\r\n  Select,\r\n  OutlinedInput,\r\n  MenuItem,\r\n  Button\r\n} from \"@material-ui/core\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport {\r\n  ResponsiveContainer,\r\n  ComposedChart,\r\n  AreaChart,\r\n  LineChart,\r\n  Line,\r\n  Area,\r\n  PieChart,\r\n  Pie,\r\n  Cell,\r\n  YAxis,\r\n  XAxis,\r\n} from \"recharts\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport mock from \"./mock\";\r\nimport Widget from \"../../components/Widget\";\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport { Typography } from \"../../components/Wrappers\";\r\nimport Dot from \"../../components/Sidebar/components/Dot\";\r\nimport Table from \"./components/Table/Table\";\r\nimport BigStat from \"./components/BigStat/BigStat\";\r\n\r\nconst mainChartData = getMainChartData();\r\nconst PieChartData = [\r\n  { name: \"Acer Laptop\", value: 400, color: \"primary\" },\r\n  { name: \"SSD\", value: 300, color: \"secondary\" },\r\n  { name: \"Apple Macbook\", value: 300, color: \"warning\" },\r\n  { name: \"Power Cables\", value: 200, color: \"success\" },\r\n];\r\n\r\nconst PieChartData2 = [\r\n  { name: \"John\", value: 400, color: \"primary\" },\r\n  { name: \"Smith\", value: 300, color: \"secondary\" },\r\n  { name: \"Snow\", value: 300, color: \"warning\" },\r\n  { name: \"Petter\", value: 200, color: \"success\" },\r\n];\r\nexport default function Dashboard(props) {\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n\r\n  // local\r\n  var [mainChartState, setMainChartState] = useState(\"monthly\");\r\n\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Dashboard\" \r\n    //   button={<Button\r\n    //   variant=\"contained\"\r\n    //   size=\"medium\"\r\n    //   color=\"secondary\"\r\n    // >\r\n    //     Latest Reports\r\n    // </Button>}\r\n     />\r\n      <Grid container spacing={4}>\r\n        <Grid item lg={3} md={4} sm={6} xs={12}>\r\n          <Widget\r\n            title=\"Total Sales\"\r\n            upperTitle\r\n            disableWidgetMenu = {true}\r\n            bodyClass={classes.fullHeightBody}\r\n            className={classes.card}\r\n          >\r\n            <div className={classes.visitsNumberContainer}>\r\n              <Grid container item alignItems={\"center\"}>\r\n                <Grid item xs={6}>\r\n              <Typography size=\"xl\" weight=\"medium\" noWrap>\r\n                12, 678\r\n              </Typography>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n              <LineChart\r\n                width={100}\r\n                height={30}\r\n                data={[\r\n                  { value: 10 },\r\n                  { value: 15 },\r\n                  { value: 10 },\r\n                  { value: 17 },\r\n                  { value: 18 },\r\n                ]}\r\n              >\r\n                <Line\r\n                  type=\"natural\"\r\n                  dataKey=\"value\"\r\n                  stroke={theme.palette.success.main}\r\n                  strokeWidth={2}\r\n                  dot={false}\r\n                />\r\n              </LineChart>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"space-between\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid item xs={4}>\r\n                <Typography color=\"text\" colorBrightness=\"secondary\" noWrap>\r\n                  Today\r\n                </Typography>\r\n                <Typography size=\"md\">860</Typography>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <Typography color=\"text\" colorBrightness=\"secondary\" noWrap>\r\n                  Last Week\r\n                </Typography>\r\n                <Typography size=\"md\">3200</Typography>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <Typography color=\"text\" colorBrightness=\"secondary\" noWrap>\r\n                  Last Month\r\n                </Typography>\r\n                <Typography size=\"md\">8678</Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Widget>\r\n        </Grid>\r\n        <Grid item lg={3} md={8} sm={6} xs={12}>\r\n          <Widget\r\n            title=\"All Products\"\r\n            upperTitle\r\n            disableWidgetMenu = {true}\r\n            className={classes.card}\r\n            bodyClass={classes.fullHeightBody}\r\n          >\r\n            <Grid item xs={6}>\r\n              <Typography size=\"xl\" weight=\"medium\" noWrap>\r\n                278\r\n              </Typography>\r\n                </Grid>\r\n            <div className={classes.performanceLegendWrapper}>\r\n              <div className={classes.legendElement}>\r\n                <Dot color=\"warning\" />\r\n                <Typography\r\n                  color=\"text\"\r\n                  colorBrightness=\"secondary\"\r\n                  className={classes.legendElementText}\r\n                >\r\n                  Laptops\r\n                </Typography>\r\n              </div>\r\n              <div className={classes.legendElement}>\r\n                <Dot color=\"primary\" />\r\n                <Typography\r\n                  color=\"text\"\r\n                  colorBrightness=\"secondary\"\r\n                  className={classes.legendElementText}\r\n                >\r\n                  Accessories\r\n                </Typography>\r\n              </div>\r\n              <div className={classes.legendElement}>\r\n                <Dot color=\"primary\" />\r\n                <Typography\r\n                  color=\"text\"\r\n                  colorBrightness=\"secondary\"\r\n                  className={classes.legendElementText}\r\n                >\r\n                  Bags\r\n                </Typography>\r\n              </div>\r\n            </div>\r\n            <div className={classes.progressSection}>\r\n              <Typography\r\n                size=\"md\"\r\n                color=\"text\"\r\n                colorBrightness=\"secondary\"\r\n                className={classes.progressSectionTitle}\r\n              >\r\n                Laptops\r\n              </Typography>\r\n              <LinearProgress\r\n                variant=\"determinate\"\r\n                value={77}\r\n                classes={{ barColorPrimary: classes.progressBarPrimary }}\r\n                className={classes.progress}\r\n              />\r\n            </div>\r\n            <div>\r\n              <Typography\r\n                size=\"md\"\r\n                color=\"text\"\r\n                colorBrightness=\"secondary\"\r\n                className={classes.progressSectionTitle}\r\n              >\r\n                  Accessories\r\n              </Typography>\r\n              <LinearProgress\r\n                variant=\"determinate\"\r\n                value={33}\r\n                classes={{ barColorPrimary: classes.progressBarWarning }}\r\n                className={classes.progress}\r\n              />\r\n            </div>\r\n            <div>\r\n              <Typography\r\n                size=\"md\"\r\n                color=\"text\"\r\n                colorBrightness=\"secondary\"\r\n                className={classes.progressSectionTitle}\r\n              >\r\n                  Bags\r\n              </Typography>\r\n              <LinearProgress\r\n                variant=\"determinate\"\r\n                value={13}\r\n                classes={{ barColorPrimary: classes.progressBarWarning }}\r\n                className={classes.progress}\r\n              />\r\n            </div>\r\n          </Widget>\r\n        </Grid>\r\n        {/* <Grid item lg={3} md={8} sm={6} xs={12}>\r\n          <Widget\r\n            title=\"Server Overview\"\r\n            upperTitle\r\n            className={classes.card}\r\n            bodyClass={classes.fullHeightBody}\r\n          >\r\n            <div className={classes.serverOverviewElement}>\r\n              <Typography\r\n                color=\"text\"\r\n                colorBrightness=\"secondary\"\r\n                className={classes.serverOverviewElementText}\r\n                noWrap\r\n              >\r\n                60% / 37°С / 3.3 Ghz\r\n              </Typography>\r\n              <div className={classes.serverOverviewElementChartWrapper}>\r\n                <ResponsiveContainer height={50} width=\"99%\">\r\n                  <AreaChart data={getRandomData(10)}>\r\n                    <Area\r\n                      type=\"natural\"\r\n                      dataKey=\"value\"\r\n                      stroke={theme.palette.secondary.main}\r\n                      fill={theme.palette.secondary.light}\r\n                      strokeWidth={2}\r\n                      fillOpacity=\"0.25\"\r\n                    />\r\n                  </AreaChart>\r\n                </ResponsiveContainer>\r\n              </div>\r\n            </div>\r\n            <div className={classes.serverOverviewElement}>\r\n              <Typography\r\n                color=\"text\"\r\n                colorBrightness=\"secondary\"\r\n                className={classes.serverOverviewElementText}\r\n                noWrap\r\n              >\r\n                54% / 31°С / 3.3 Ghz\r\n              </Typography>\r\n              <div className={classes.serverOverviewElementChartWrapper}>\r\n                <ResponsiveContainer height={50} width=\"99%\">\r\n                  <AreaChart data={getRandomData(10)}>\r\n                    <Area\r\n                      type=\"natural\"\r\n                      dataKey=\"value\"\r\n                      stroke={theme.palette.primary.main}\r\n                      fill={theme.palette.primary.light}\r\n                      strokeWidth={2}\r\n                      fillOpacity=\"0.25\"\r\n                    />\r\n                  </AreaChart>\r\n                </ResponsiveContainer>\r\n              </div>\r\n            </div>\r\n            <div className={classes.serverOverviewElement}>\r\n              <Typography\r\n                color=\"text\"\r\n                colorBrightness=\"secondary\"\r\n                className={classes.serverOverviewElementText}\r\n                noWrap\r\n              >\r\n                57% / 21°С / 3.3 Ghz\r\n              </Typography>\r\n              <div className={classes.serverOverviewElementChartWrapper}>\r\n                <ResponsiveContainer height={50} width=\"99%\">\r\n                  <AreaChart data={getRandomData(10)}>\r\n                    <Area\r\n                      type=\"natural\"\r\n                      dataKey=\"value\"\r\n                      stroke={theme.palette.warning.main}\r\n                      fill={theme.palette.warning.light}\r\n                      strokeWidth={2}\r\n                      fillOpacity=\"0.25\"\r\n                    />\r\n                  </AreaChart>\r\n                </ResponsiveContainer>\r\n              </div>\r\n            </div>\r\n          </Widget>\r\n        </Grid> */}\r\n        <Grid item lg={3} md={4} sm={6} xs={12}>\r\n          <Widget title=\"Top Products\" disableWidgetMenu = {true} upperTitle className={classes.card}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <ResponsiveContainer width=\"100%\" height={144}>\r\n                  <PieChart>\r\n                    <Pie\r\n                      data={PieChartData}\r\n                      innerRadius={30}\r\n                      outerRadius={40}\r\n                      dataKey=\"value\"\r\n                    >\r\n                      {PieChartData.map((entry, index) => (\r\n                        <Cell\r\n                          key={`cell-${index}`}\r\n                          fill={theme.palette[entry.color].main}\r\n                        />\r\n                      ))}\r\n                    </Pie>\r\n                  </PieChart>\r\n                </ResponsiveContainer>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <div className={classes.pieChartLegendWrapper}>\r\n                  {PieChartData.map(({ name, value, color }, index) => (\r\n                    <div key={color} className={classes.legendItemContainer}>\r\n                      <Dot color={color} />\r\n                      <Typography style={{ whiteSpace: \"nowrap\", fontSize: 12 }} >\r\n                        &nbsp;{name}&nbsp;\r\n                      </Typography>\r\n                      <Typography color=\"text\" colorBrightness=\"secondary\">\r\n                        &nbsp;{value}\r\n                      </Typography>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n          </Widget>\r\n        </Grid>\r\n        <Grid item lg={3} md={4} sm={6} xs={12}>\r\n          <Widget title=\"Top Customers\" disableWidgetMenu = {true} upperTitle className={classes.card}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <ResponsiveContainer width=\"100%\" height={144}>\r\n                  <PieChart>\r\n                    <Pie\r\n                      data={PieChartData2}\r\n                      innerRadius={30}\r\n                      outerRadius={40}\r\n                      dataKey=\"value\"\r\n                    >\r\n                      {PieChartData2.map((entry, index) => (\r\n                        <Cell\r\n                          key={`cell-${index}`}\r\n                          fill={theme.palette[entry.color].main}\r\n                        />\r\n                      ))}\r\n                    </Pie>\r\n                  </PieChart>\r\n                </ResponsiveContainer>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <div className={classes.pieChartLegendWrapper}>\r\n                  {PieChartData2.map(({ name, value, color }, index) => (\r\n                    <div key={color} className={classes.legendItemContainer}>\r\n                      <Dot color={color} />\r\n                      <Typography style={{ whiteSpace: \"nowrap\", fontSize: 12 }} >\r\n                        &nbsp;{name}&nbsp;\r\n                      </Typography>\r\n                      <Typography color=\"text\" colorBrightness=\"secondary\">\r\n                        &nbsp; $ {value}\r\n                      </Typography>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n          </Widget>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Widget\r\n          disableWidgetMenu = {true}\r\n            bodyClass={classes.mainChartBody}\r\n            header={\r\n              <div className={classes.mainChartHeader}>\r\n                <Typography\r\n                  variant=\"h5\"\r\n                  color=\"text\"\r\n                  colorBrightness=\"secondary\"\r\n                >\r\n                  Sales Chart\r\n                </Typography>\r\n                <div className={classes.mainChartHeaderLabels}>\r\n                  <div className={classes.mainChartHeaderLabel}>\r\n                    <Dot color=\"warning\" />\r\n                    <Typography className={classes.mainChartLegentElement}>\r\n                      This Month\r\n                    </Typography>\r\n                  </div>\r\n                  <div className={classes.mainChartHeaderLabel}>\r\n                    <Dot color=\"primary\" />\r\n                    <Typography className={classes.mainChartLegentElement}>\r\n                      Last Month\r\n                    </Typography>\r\n                  </div>\r\n                  {/* <div className={classes.mainChartHeaderLabel}>\r\n                    <Dot color=\"secondary\" />\r\n                    <Typography className={classes.mainChartLegentElement}>\r\n                      Desktop\r\n                    </Typography>\r\n                  </div> */}\r\n                </div>\r\n                {/* <Select\r\n                  value={mainChartState}\r\n                  onChange={e => setMainChartState(e.target.value)}\r\n                  input={\r\n                    <OutlinedInput\r\n                      labelWidth={0}\r\n                      classes={{\r\n                        notchedOutline: classes.mainChartSelectRoot,\r\n                        input: classes.mainChartSelect,\r\n                      }}\r\n                    />\r\n                  }\r\n                  autoWidth\r\n                >\r\n                  <MenuItem value=\"daily\">Daily</MenuItem>\r\n                  <MenuItem value=\"weekly\">Weekly</MenuItem>\r\n                  <MenuItem value=\"monthly\">Monthly</MenuItem>\r\n                </Select> */}\r\n              </div>\r\n            }\r\n          >\r\n            <ResponsiveContainer width=\"100%\" minWidth={500} height={350}>\r\n              <ComposedChart\r\n                margin={{ top: 0, right: -15, left: -15, bottom: 0 }}\r\n                data={mainChartData}\r\n              >\r\n                <YAxis\r\n                  ticks={[0, 2500, 5000, 7500]}\r\n                  tick={{ fill: theme.palette.text.hint + \"80\", fontSize: 14 }}\r\n                  stroke={theme.palette.text.hint + \"80\"}\r\n                  tickLine={false}\r\n                />\r\n                <XAxis\r\n                  tickFormatter={i => i + 1}\r\n                  tick={{ fill: theme.palette.text.hint + \"80\", fontSize: 14 }}\r\n                  stroke={theme.palette.text.hint + \"80\"}\r\n                  tickLine={false}\r\n                />\r\n                <Area\r\n                  type=\"natural\"\r\n                  dataKey=\"desktop\"\r\n                  fill={theme.palette.background.light}\r\n                  strokeWidth={0}\r\n                  activeDot={false}\r\n                />\r\n                <Line\r\n                  type=\"natural\"\r\n                  dataKey=\"mobile\"\r\n                  stroke={theme.palette.primary.main}\r\n                  strokeWidth={2}\r\n                  dot={false}\r\n                  activeDot={false}\r\n                />\r\n                <Line\r\n                  type=\"linear\"\r\n                  dataKey=\"tablet\"\r\n                  stroke={theme.palette.warning.main}\r\n                  strokeWidth={2}\r\n                  dot={{\r\n                    stroke: theme.palette.warning.dark,\r\n                    strokeWidth: 2,\r\n                    fill: theme.palette.warning.main,\r\n                  }}\r\n                />\r\n              </ComposedChart>\r\n            </ResponsiveContainer>\r\n          </Widget>\r\n        </Grid>\r\n        {/* {mock.bigStat.map(stat => (\r\n          <Grid item md={4} sm={6} xs={12} key={stat.product}>\r\n            <BigStat {...stat} />\r\n          </Grid>\r\n        ))} */}\r\n        <Grid item xs={12}>\r\n          {/* <Widget\r\n            title=\"Support Requests\"\r\n            upperTitle\r\n            noBodyPadding\r\n            bodyClass={classes.tableWidget}\r\n          >\r\n            <Table data={mock.table} />\r\n          </Widget> */}\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\n// #######################################################################\r\nfunction getRandomData(length, min, max, multiplier = 10, maxDiff = 10) {\r\n  var array = new Array(length).fill();\r\n  let lastValue;\r\n\r\n  return array.map((item, index) => {\r\n    let randomValue = Math.floor(Math.random() * multiplier + 1);\r\n\r\n    while (\r\n      randomValue <= min ||\r\n      randomValue >= max ||\r\n      (lastValue && randomValue - lastValue > maxDiff)\r\n    ) {\r\n      randomValue = Math.floor(Math.random() * multiplier + 1);\r\n    }\r\n\r\n    lastValue = randomValue;\r\n\r\n    return { value: randomValue };\r\n  });\r\n}\r\n\r\nfunction getMainChartData() {\r\n  var resultArray = [];\r\n  var tablet = getRandomData(31, 3500, 6500, 7500, 1000);\r\n  var desktop = getRandomData(31, 1500, 7500, 7500, 1500);\r\n  var mobile = getRandomData(31, 1500, 7500, 7500, 1500);\r\n\r\n  for (let i = 0; i < tablet.length; i++) {\r\n    resultArray.push({\r\n      tablet: tablet[i].value,\r\n      desktop: desktop[i].value,\r\n      mobile: mobile[i].value,\r\n    });\r\n  }\r\n\r\n  return resultArray;\r\n}\r\n","F:\\javascript\\REACT\\react-material-admin\\src\\components\\Sidebar\\Sidebar.js",["269","270","271","272","273"],"F:\\javascript\\REACT\\react-material-admin\\src\\components\\Header\\Header.js",["274","275","276","277","278","279","280","281","282"],"import React, { useState } from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  InputBase,\r\n  Menu,\r\n  MenuItem,\r\n  Fab,\r\n  Link\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Menu as MenuIcon,\r\n  MailOutline as MailIcon,\r\n  NotificationsNone as NotificationsIcon,\r\n  Person as AccountIcon,\r\n  Search as SearchIcon,\r\n  Send as SendIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n} from \"@material-ui/icons\";\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport { Badge, Typography, Button } from \"../Wrappers\";\r\nimport Notification from \"../Notification/Notification\";\r\nimport UserAvatar from \"../UserAvatar/UserAvatar\";\r\n\r\n// context\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\nimport { useUserDispatch, signOut } from \"../../context/UserContext\";\r\n\r\nconst messages = [\r\n  {\r\n    id: 0,\r\n    variant: \"warning\",\r\n    name: \"Jane Hew\",\r\n    message: \"Hey! How is it going?\",\r\n    time: \"9:32\",\r\n  },\r\n  {\r\n    id: 1,\r\n    variant: \"success\",\r\n    name: \"Lloyd Brown\",\r\n    message: \"Check out my new Dashboard\",\r\n    time: \"9:18\",\r\n  },\r\n  {\r\n    id: 2,\r\n    variant: \"primary\",\r\n    name: \"Mark Winstein\",\r\n    message: \"I want rearrange the appointment\",\r\n    time: \"9:15\",\r\n  },\r\n  {\r\n    id: 3,\r\n    variant: \"secondary\",\r\n    name: \"Liana Dutti\",\r\n    message: \"Good news from sale department\",\r\n    time: \"9:09\",\r\n  },\r\n];\r\n\r\nconst notifications = [\r\n  { id: 0, color: \"warning\", message: \"Check out this awesome ticket\" },\r\n  {\r\n    id: 1,\r\n    color: \"success\",\r\n    type: \"info\",\r\n    message: \"What is the best way to get ...\",\r\n  },\r\n  {\r\n    id: 2,\r\n    color: \"secondary\",\r\n    type: \"notification\",\r\n    message: \"This is just a simple notification\",\r\n  },\r\n  {\r\n    id: 3,\r\n    color: \"primary\",\r\n    type: \"e-commerce\",\r\n    message: \"12 new orders has arrived today\",\r\n  },\r\n];\r\n\r\nexport default function Header(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var layoutState = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\n  var userDispatch = useUserDispatch();\r\n\r\n  // local\r\n  var [mailMenu, setMailMenu] = useState(null);\r\n  var [isMailsUnread, setIsMailsUnread] = useState(true);\r\n  var [notificationsMenu, setNotificationsMenu] = useState(null);\r\n  var [isNotificationsUnread, setIsNotificationsUnread] = useState(true);\r\n  var [profileMenu, setProfileMenu] = useState(null);\r\n  var [isSearchOpen, setSearchOpen] = useState(false);\r\n\r\n  return (\r\n    <AppBar position=\"fixed\" className={classes.appBar}>\r\n      <Toolbar className={classes.toolbar}>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          onClick={() => toggleSidebar(layoutDispatch)}\r\n          className={classNames(\r\n            classes.headerMenuButtonSandwich,\r\n            classes.headerMenuButtonCollapse,\r\n          )}\r\n        >\r\n          {layoutState.isSidebarOpened ? (\r\n            <ArrowBackIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          ) : (\r\n            <MenuIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          )}\r\n        </IconButton>\r\n        <Typography variant=\"h6\" weight=\"medium\" className={classes.logotype}>\r\n          Cyber Cities\r\n        </Typography>\r\n        <div className={classes.grow} />\r\n        {/* <Button component={Link} href=\"https://flatlogic.com/templates/react-material-admin-full\" variant={\"outlined\"} color={\"secondary\"} className={classes.purchaseBtn}>Unlock full version</Button> */}\r\n        <div\r\n          className={classNames(classes.search, {\r\n            [classes.searchFocused]: isSearchOpen,\r\n          })}\r\n        >\r\n          <div\r\n            className={classNames(classes.searchIcon, {\r\n              [classes.searchIconOpened]: isSearchOpen,\r\n            })}\r\n            onClick={() => setSearchOpen(!isSearchOpen)}\r\n          >\r\n            <SearchIcon classes={{ root: classes.headerIcon }} />\r\n          </div>\r\n          <InputBase\r\n            placeholder=\"Search…\"\r\n            classes={{\r\n              root: classes.inputRoot,\r\n              input: classes.inputInput,\r\n            }}\r\n          />\r\n        </div>\r\n        {/* <IconButton\r\n          color=\"inherit\"\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"mail-menu\"\r\n          onClick={e => {\r\n            setNotificationsMenu(e.currentTarget);\r\n            setIsNotificationsUnread(false);\r\n          }}\r\n          className={classes.headerMenuButton}\r\n        >\r\n          <Badge\r\n            badgeContent={isNotificationsUnread ? notifications.length : null}\r\n            color=\"warning\"\r\n          >\r\n            <NotificationsIcon classes={{ root: classes.headerIcon }} />\r\n          </Badge>\r\n        </IconButton>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"mail-menu\"\r\n          onClick={e => {\r\n            setMailMenu(e.currentTarget);\r\n            setIsMailsUnread(false);\r\n          }}\r\n          className={classes.headerMenuButton}\r\n        >\r\n          <Badge\r\n            badgeContent={isMailsUnread ? messages.length : null}\r\n            color=\"secondary\"\r\n          >\r\n            <MailIcon classes={{ root: classes.headerIcon }} />\r\n          </Badge>\r\n        </IconButton> */}\r\n        <IconButton\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n          className={classes.headerMenuButton}\r\n          aria-controls=\"profile-menu\"\r\n          onClick={e => setProfileMenu(e.currentTarget)}\r\n        >\r\n          <AccountIcon classes={{ root: classes.headerIcon }} />\r\n        </IconButton>\r\n        <Menu\r\n          id=\"mail-menu\"\r\n          open={Boolean(mailMenu)}\r\n          anchorEl={mailMenu}\r\n          onClose={() => setMailMenu(null)}\r\n          MenuListProps={{ className: classes.headerMenuList }}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        >\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography variant=\"h4\" weight=\"medium\">\r\n              New Messages\r\n            </Typography>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              component=\"a\"\r\n              color=\"secondary\"\r\n            >\r\n              {messages.length} New Messages\r\n            </Typography>\r\n          </div>\r\n          {messages.map(message => (\r\n            <MenuItem key={message.id} className={classes.messageNotification}>\r\n              <div className={classes.messageNotificationSide}>\r\n                <UserAvatar color={message.variant} name={message.name} />\r\n                <Typography size=\"sm\" color=\"text\" colorBrightness=\"secondary\">\r\n                  {message.time}\r\n                </Typography>\r\n              </div>\r\n              <div\r\n                className={classNames(\r\n                  classes.messageNotificationSide,\r\n                  classes.messageNotificationBodySide,\r\n                )}\r\n              >\r\n                <Typography weight=\"medium\" gutterBottom>\r\n                  {message.name}\r\n                </Typography>\r\n                <Typography color=\"text\" colorBrightness=\"secondary\">\r\n                  {message.message}\r\n                </Typography>\r\n              </div>\r\n            </MenuItem>\r\n          ))}\r\n          <Fab\r\n            variant=\"extended\"\r\n            color=\"primary\"\r\n            aria-label=\"Add\"\r\n            className={classes.sendMessageButton}\r\n          >\r\n            Send New Message\r\n            <SendIcon className={classes.sendButtonIcon} />\r\n          </Fab>\r\n        </Menu>\r\n        <Menu\r\n          id=\"notifications-menu\"\r\n          open={Boolean(notificationsMenu)}\r\n          anchorEl={notificationsMenu}\r\n          onClose={() => setNotificationsMenu(null)}\r\n          className={classes.headerMenu}\r\n          disableAutoFocusItem\r\n        >\r\n          {notifications.map(notification => (\r\n            <MenuItem\r\n              key={notification.id}\r\n              onClick={() => setNotificationsMenu(null)}\r\n              className={classes.headerMenuItem}\r\n            >\r\n              <Notification {...notification} typographyVariant=\"inherit\" />\r\n            </MenuItem>\r\n          ))}\r\n        </Menu>\r\n        <Menu\r\n          id=\"profile-menu\"\r\n          open={Boolean(profileMenu)}\r\n          anchorEl={profileMenu}\r\n          onClose={() => setProfileMenu(null)}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        >\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography variant=\"h4\" weight=\"medium\">\r\n              Seller\r\n            </Typography>\r\n            {/* <Typography\r\n              className={classes.profileMenuLink}\r\n              component=\"a\"\r\n              color=\"primary\"\r\n              href=\"https://flatlogic.com\"\r\n            >\r\n              Flalogic.com\r\n            </Typography> */}\r\n          </div>\r\n          {/* <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Profile\r\n          </MenuItem>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Tasks\r\n          </MenuItem>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Messages\r\n          </MenuItem> */}\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              color=\"primary\"\r\n              onClick={() => signOut(userDispatch, props.history)}\r\n            >\r\n              Sign Out\r\n            </Typography>\r\n          </div>\r\n        </Menu>\r\n      </Toolbar>\r\n    </AppBar> \r\n  );\r\n}\r\n","F:\\javascript\\REACT\\react-material-admin\\src\\pages\\icons\\Icons.js",[],"F:\\javascript\\REACT\\react-material-admin\\src\\pages\\dashboard\\mock.js",[],"F:\\javascript\\REACT\\react-material-admin\\src\\pages\\maps\\styles.js",[],"F:\\javascript\\REACT\\react-material-admin\\src\\pages\\dashboard\\components\\Table\\Table.js",[],"F:\\javascript\\REACT\\react-material-admin\\src\\components\\PageTitle\\PageTitle.js",[],"F:\\javascript\\REACT\\react-material-admin\\src\\components\\Sidebar\\components\\Dot.js",[],"F:\\javascript\\REACT\\react-material-admin\\src\\components\\Wrappers\\Wrappers.js",[],"F:\\javascript\\REACT\\react-material-admin\\src\\components\\Widget\\Widget.js",[],"F:\\javascript\\REACT\\react-material-admin\\src\\components\\PageTitle\\styles.js",[],"F:\\javascript\\REACT\\react-material-admin\\src\\pages\\dashboard\\styles.js",[],"F:\\javascript\\REACT\\react-material-admin\\src\\pages\\icons\\styles.js",[],"F:\\javascript\\REACT\\react-material-admin\\src\\components\\Header\\styles.js",[],"F:\\javascript\\REACT\\react-material-admin\\src\\pages\\typography\\styles.js",[],"F:\\javascript\\REACT\\react-material-admin\\src\\components\\Sidebar\\styles.js",[],"F:\\javascript\\REACT\\react-material-admin\\src\\pages\\notifications\\styles.js",[],"F:\\javascript\\REACT\\react-material-admin\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js",[],"F:\\javascript\\REACT\\react-material-admin\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js",[],"F:\\javascript\\REACT\\react-material-admin\\src\\pages\\charts\\components\\ApexLineChart.js",[],"F:\\javascript\\REACT\\react-material-admin\\src\\pages\\charts\\components\\ApexHeatmap.js",[],"F:\\javascript\\REACT\\react-material-admin\\src\\components\\Notification\\Notification.js",[],"F:\\javascript\\REACT\\react-material-admin\\src\\components\\UserAvatar\\UserAvatar.js",[],"F:\\javascript\\REACT\\react-material-admin\\src\\components\\Widget\\styles.js",[],"F:\\javascript\\REACT\\react-material-admin\\src\\pages\\dashboard\\components\\BigStat\\styles.js",[],"F:\\javascript\\REACT\\react-material-admin\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js",[],"F:\\javascript\\REACT\\react-material-admin\\src\\components\\UserAvatar\\styles.js",[],"F:\\javascript\\REACT\\react-material-admin\\src\\components\\Notification\\styles.js",[],"F:\\javascript\\REACT\\react-material-admin\\src\\pages\\products\\EditProduct.js",["283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302"],"F:\\javascript\\REACT\\react-material-admin\\src\\pages\\Orders\\Orders.js",["303","304","305","306","307","308","309","310","311","312","313","314"],"import React, { useEffect, useState } from \"react\";\r\nimport { Button, CircularProgress, Grid } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// components\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport Table from \"../dashboard/components/Table/Table\";\r\n\r\n// data\r\nimport mock from \"../dashboard/mock\";\r\nimport axios from \"axios\";\r\n\r\nconst datatableData = [\r\n  [\"Joe James\", \"Example Inc.\", \"Yonkers\", \"3400\"],\r\n  [\"John Walsh\", \"Example Inc.\", \"Hartford\", \"3400\"],\r\n  [\"Bob Herm\", \"Example Inc.\", \"Tampa\", \"3400\"],\r\n  [\"James Houston\", \"Example Inc.\", \"Dallas\", \"3400\"],\r\n  [\"Prabhakar Linwood\", \"Example Inc.\", \"Hartford\", \"3400\"],\r\n  [\"Kaui Ignace\", \"Example Inc.\", \"Yonkers\", \"3400\"],\r\n  [\"Esperanza Susanne\", \"Example Inc.\", \"Hartford\", \"3400\"],\r\n  [\"Christian Birgitte\", \"Example Inc.\", \"Tampa\", \"3400\"],\r\n  [\"Meral Elias\", \"Example Inc.\", \"Hartford\", \"3400\"],\r\n  [\"Deep Pau\", \"Example Inc.\", \"Yonkers\", \"3400\"],\r\n  [\"Sebastiana Hani\", \"Example Inc.\", \"Dallas\", \"3400\"],\r\n  [\"Marciano Oihana\", \"Example Inc.\", \"Yonkers\", \"3400\"],\r\n  [\"Brigid Ankur\", \"Example Inc.\", \"Dallas\", \"3400\"],\r\n  [\"Anna Siranush\", \"Example Inc.\", \"Yonkers\", \"3400\"],\r\n  [\"Avram Sylva\", \"Example Inc.\", \"Hartford\", \"3400\"],\r\n  [\"Serafima Babatunde\", \"Example Inc.\", \"Tampa\", \"3400\"],\r\n  [\"Gaston Festus\", \"Example Inc.\", \"Tampa\", \"3400\"],\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  tableOverflow: {\r\n    overflow: \"auto\",\r\n  },\r\n}));\r\n\r\nexport default function Orders() {\r\n\r\n\r\n  const classes = useStyles();\r\n  const [products,setProducts] = useState([])\r\n  const [loading,setLoading] = useState(false)\r\n  const history = useHistory();\r\n  const token = localStorage.getItem(\"id_token\");\r\n\r\n  \r\n  var headers = {\r\n    \"Content-Type\": \"application/json\",\r\n    Authorization: `Bearer ${token}`,\r\n  };\r\n\r\nconst fetchProducts = async () => {\r\n  axios({\r\n    method: 'GET',\r\n    url: `https://cybercitiesapi.developer-um.xyz/api/products`,\r\n}).then((response) => {\r\n    // console.log(\"response\", response)\r\n    const Data = response.data\r\n    if (response.status == 200) {\r\n      let product = []\r\n      Data.Products.map((pro,index)=>{\r\n        let singleProduct = [pro?.id,pro?.product_name,pro.brand,pro.discount,pro?.price,index]\r\n        \r\n        product.push(singleProduct)\r\n        \r\n      })\r\n      const reverse = product.reverse() \r\n      setProducts(reverse)\r\n  setLoading(false)\r\n      \r\n\r\n    }\r\n    else {\r\n      setLoading(false)\r\n\r\n      console.log(\"error\")\r\n    }\r\n  }).catch((error)=>{\r\n    console.log(error)\r\n    setLoading(false)\r\n\r\n  })\r\n}\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    fetchProducts()\r\n  }, [])\r\n\r\n\r\n  const options = {\r\n    onRowsDelete:(e)=>{\r\n      setLoading(true)\r\n      console.log(e.data)\r\n      const filtered = products.filter((pro,index)=>{\r\n        return pro[5] == e.data[0].index\r\n      })\r\n    \r\n    let formData = new FormData();\r\n    formData.append('id',filtered[0][0])\r\n    axios({\r\n      method: 'POST',\r\n      url: `https://cybercitiesapi.developer-um.xyz/api/delete/product`,\r\n      headers: headers,\r\n      data: formData\r\n  }).then((response) => {\r\n      // console.log(\"response\", response)\r\n      setProducts()\r\n      const Data = response.data\r\n      if (response.status == 200) {\r\n      fetchProducts()\r\n    setLoading(false)\r\n        \r\n  \r\n      }\r\n      else {\r\n        setLoading(false)\r\n\r\n        console.log(\"error\")\r\n      }\r\n    }).catch((error)=>{\r\n      console.log(error)\r\n      setLoading(false)\r\n    })\r\n    setProducts(filtered)\r\n  }, \r\n  onRowClick: (event, rowData) => {\r\n    \r\n    console.log(event[0], rowData);\r\n    // history.push(`/app/product/${event[0]}`)\r\n    history.push({\r\n      pathname:`/app/product/${event[0]}`,\r\n      state: {\r\n        data: event[0],\r\n      },\r\n    })\r\n    \r\n },\r\n    filterType: \"multiselect\",\r\n  }\r\n  \r\n  return (\r\n\r\n\r\n    <>\r\n     <div style={{display:'flex',alignItems:'center',flexDirection:'row',justifyContent:'space-between',}}>\r\n      <PageTitle title=\"Orders\" />\r\n     \r\n        {/* <Button\r\n          onClick={() => {\r\n            history.push('/app/addProduct')\r\n          }}\r\n          style={{height:\"50px\",backgroundColor:'#536DFE',color:'#fff'}}\r\n          color=\"success\"\r\n          variant=\"outlined\"\r\n        >\r\n          Add New Product\r\n        </Button> */}\r\n      </div>\r\n      <Grid container spacing={4}>\r\n     {loading ? <CircularProgress size={26} className={classes.loginLoader} style ={{align:'center',justifyContent:'center',alignContent:'center'}} />\r\n     :   <Grid item xs={12}>\r\n          {/* <MUIDataTable\r\n            title=\"Order List\"\r\n            data={products}\r\n            columns={[\"Order Id\",\"Customer Name\", \"Status\", \"Discount\", \"Price\"]}\r\n            options={options}\r\n          /> */}\r\n        </Grid>}\r\n        {/* <Grid item xs={12}>\r\n          <Widget\r\n            title=\"Material-UI Table\"\r\n            upperTitle\r\n            noBodyPadding\r\n            bodyClass={classes.tableOverflow}\r\n          >\r\n            <Table data={mock.table} />\r\n          </Widget>\r\n        </Grid> */}\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","F:\\javascript\\REACT\\react-material-admin\\src\\pages\\profile\\Profile.js",[],{"ruleId":"315","replacedBy":"316"},{"ruleId":"317","replacedBy":"318"},{"ruleId":"319","severity":1,"message":"320","line":68,"column":37,"nodeType":"321","messageId":"322","endLine":68,"endColumn":39},{"ruleId":"323","severity":1,"message":"324","line":9,"column":9,"nodeType":"325","messageId":"326","endLine":9,"endColumn":12},{"ruleId":"323","severity":1,"message":"327","line":9,"column":14,"nodeType":"325","messageId":"326","endLine":9,"endColumn":24},{"ruleId":"323","severity":1,"message":"328","line":9,"column":26,"nodeType":"325","messageId":"326","endLine":9,"endColumn":30},{"ruleId":"323","severity":1,"message":"329","line":10,"column":8,"nodeType":"325","messageId":"326","endLine":10,"endColumn":12},{"ruleId":"323","severity":1,"message":"330","line":14,"column":18,"nodeType":"325","messageId":"326","endLine":14,"endColumn":30},{"ruleId":"323","severity":1,"message":"331","line":15,"column":17,"nodeType":"325","messageId":"326","endLine":15,"endColumn":28},{"ruleId":"323","severity":1,"message":"332","line":16,"column":16,"nodeType":"325","messageId":"326","endLine":16,"endColumn":26},{"ruleId":"323","severity":1,"message":"333","line":32,"column":8,"nodeType":"325","messageId":"326","endLine":32,"endColumn":14},{"ruleId":"323","severity":1,"message":"334","line":13,"column":8,"nodeType":"325","messageId":"326","endLine":13,"endColumn":18},{"ruleId":"323","severity":1,"message":"335","line":21,"column":8,"nodeType":"325","messageId":"326","endLine":21,"endColumn":14},{"ruleId":"319","severity":1,"message":"320","line":64,"column":37,"nodeType":"321","messageId":"322","endLine":64,"endColumn":39},{"ruleId":"323","severity":1,"message":"336","line":2,"column":8,"nodeType":"325","messageId":"326","endLine":2,"endColumn":16},{"ruleId":"323","severity":1,"message":"337","line":4,"column":38,"nodeType":"325","messageId":"326","endLine":4,"endColumn":44},{"ruleId":"323","severity":1,"message":"328","line":8,"column":3,"nodeType":"325","messageId":"326","endLine":8,"endColumn":7},{"ruleId":"323","severity":1,"message":"338","line":14,"column":3,"nodeType":"325","messageId":"326","endLine":14,"endColumn":11},{"ruleId":"323","severity":1,"message":"339","line":22,"column":10,"nodeType":"325","messageId":"326","endLine":22,"endColumn":20},{"ruleId":"323","severity":1,"message":"340","line":22,"column":22,"nodeType":"325","messageId":"326","endLine":22,"endColumn":35},{"ruleId":"323","severity":1,"message":"341","line":27,"column":3,"nodeType":"325","messageId":"326","endLine":27,"endColumn":26},{"ruleId":"323","severity":1,"message":"342","line":28,"column":3,"nodeType":"325","messageId":"326","endLine":28,"endColumn":13},{"ruleId":"323","severity":1,"message":"343","line":29,"column":3,"nodeType":"325","messageId":"326","endLine":29,"endColumn":13},{"ruleId":"319","severity":1,"message":"320","line":66,"column":29,"nodeType":"321","messageId":"322","endLine":66,"endColumn":31},{"ruleId":"344","severity":1,"message":"345","line":70,"column":37,"nodeType":"346","messageId":"347","endLine":70,"endColumn":39},{"ruleId":"348","severity":1,"message":"349","line":83,"column":6,"nodeType":"350","endLine":83,"endColumn":8,"suggestions":"351"},{"ruleId":"323","severity":1,"message":"352","line":87,"column":10,"nodeType":"325","messageId":"326","endLine":87,"endColumn":17},{"ruleId":"344","severity":1,"message":"345","line":97,"column":24,"nodeType":"346","messageId":"347","endLine":97,"endColumn":26},{"ruleId":"323","severity":1,"message":"353","line":118,"column":15,"nodeType":"325","messageId":"326","endLine":118,"endColumn":19},{"ruleId":"319","severity":1,"message":"320","line":120,"column":29,"nodeType":"321","messageId":"322","endLine":120,"endColumn":31},{"ruleId":"344","severity":1,"message":"345","line":166,"column":37,"nodeType":"346","messageId":"347","endLine":166,"endColumn":39},{"ruleId":"323","severity":1,"message":"354","line":185,"column":9,"nodeType":"325","messageId":"326","endLine":185,"endColumn":22},{"ruleId":"323","severity":1,"message":"355","line":9,"column":8,"nodeType":"325","messageId":"326","endLine":9,"endColumn":14},{"ruleId":"323","severity":1,"message":"356","line":10,"column":8,"nodeType":"325","messageId":"326","endLine":10,"endColumn":13},{"ruleId":"323","severity":1,"message":"357","line":13,"column":8,"nodeType":"325","messageId":"326","endLine":13,"endColumn":12},{"ruleId":"323","severity":1,"message":"358","line":16,"column":7,"nodeType":"325","messageId":"326","endLine":16,"endColumn":20},{"ruleId":"319","severity":1,"message":"320","line":66,"column":25,"nodeType":"321","messageId":"322","endLine":66,"endColumn":27},{"ruleId":"344","severity":1,"message":"345","line":69,"column":36,"nodeType":"346","messageId":"347","endLine":69,"endColumn":38},{"ruleId":"348","severity":1,"message":"359","line":97,"column":6,"nodeType":"350","endLine":97,"endColumn":8,"suggestions":"360"},{"ruleId":"319","severity":1,"message":"320","line":106,"column":23,"nodeType":"321","messageId":"322","endLine":106,"endColumn":25},{"ruleId":"323","severity":1,"message":"353","line":118,"column":13,"nodeType":"325","messageId":"326","endLine":118,"endColumn":17},{"ruleId":"319","severity":1,"message":"320","line":119,"column":27,"nodeType":"321","messageId":"322","endLine":119,"endColumn":29},{"ruleId":"323","severity":1,"message":"337","line":5,"column":3,"nodeType":"325","messageId":"326","endLine":5,"endColumn":9},{"ruleId":"323","severity":1,"message":"361","line":6,"column":3,"nodeType":"325","messageId":"326","endLine":6,"endColumn":16},{"ruleId":"323","severity":1,"message":"338","line":7,"column":3,"nodeType":"325","messageId":"326","endLine":7,"endColumn":11},{"ruleId":"323","severity":1,"message":"362","line":8,"column":3,"nodeType":"325","messageId":"326","endLine":8,"endColumn":9},{"ruleId":"323","severity":1,"message":"363","line":14,"column":3,"nodeType":"325","messageId":"326","endLine":14,"endColumn":12},{"ruleId":"323","severity":1,"message":"357","line":29,"column":8,"nodeType":"325","messageId":"326","endLine":29,"endColumn":12},{"ruleId":"323","severity":1,"message":"356","line":34,"column":8,"nodeType":"325","messageId":"326","endLine":34,"endColumn":13},{"ruleId":"323","severity":1,"message":"364","line":35,"column":8,"nodeType":"325","messageId":"326","endLine":35,"endColumn":15},{"ruleId":"323","severity":1,"message":"365","line":56,"column":8,"nodeType":"325","messageId":"326","endLine":56,"endColumn":22},{"ruleId":"323","severity":1,"message":"366","line":56,"column":24,"nodeType":"325","messageId":"326","endLine":56,"endColumn":41},{"ruleId":"323","severity":1,"message":"367","line":5,"column":24,"nodeType":"325","messageId":"326","endLine":5,"endColumn":41},{"ruleId":"323","severity":1,"message":"368","line":6,"column":17,"nodeType":"325","messageId":"326","endLine":6,"endColumn":31},{"ruleId":"323","severity":1,"message":"369","line":7,"column":17,"nodeType":"325","messageId":"326","endLine":7,"endColumn":31},{"ruleId":"323","severity":1,"message":"370","line":9,"column":21,"nodeType":"325","messageId":"326","endLine":9,"endColumn":32},{"ruleId":"323","severity":1,"message":"371","line":23,"column":8,"nodeType":"325","messageId":"326","endLine":23,"endColumn":11},{"ruleId":"323","severity":1,"message":"328","line":10,"column":3,"nodeType":"325","messageId":"326","endLine":10,"endColumn":7},{"ruleId":"323","severity":1,"message":"372","line":14,"column":18,"nodeType":"325","messageId":"326","endLine":14,"endColumn":26},{"ruleId":"323","severity":1,"message":"367","line":15,"column":24,"nodeType":"325","messageId":"326","endLine":15,"endColumn":41},{"ruleId":"323","severity":1,"message":"373","line":27,"column":10,"nodeType":"325","messageId":"326","endLine":27,"endColumn":15},{"ruleId":"323","severity":1,"message":"362","line":27,"column":29,"nodeType":"325","messageId":"326","endLine":27,"endColumn":35},{"ruleId":"323","severity":1,"message":"374","line":102,"column":8,"nodeType":"325","messageId":"326","endLine":102,"endColumn":21},{"ruleId":"323","severity":1,"message":"375","line":102,"column":23,"nodeType":"325","messageId":"326","endLine":102,"endColumn":39},{"ruleId":"323","severity":1,"message":"376","line":104,"column":8,"nodeType":"325","messageId":"326","endLine":104,"endColumn":29},{"ruleId":"323","severity":1,"message":"377","line":104,"column":31,"nodeType":"325","messageId":"326","endLine":104,"endColumn":55},{"ruleId":"323","severity":1,"message":"336","line":10,"column":8,"nodeType":"325","messageId":"326","endLine":10,"endColumn":16},{"ruleId":"323","severity":1,"message":"337","line":12,"column":38,"nodeType":"325","messageId":"326","endLine":12,"endColumn":44},{"ruleId":"323","severity":1,"message":"328","line":19,"column":3,"nodeType":"325","messageId":"326","endLine":19,"endColumn":7},{"ruleId":"323","severity":1,"message":"338","line":25,"column":3,"nodeType":"325","messageId":"326","endLine":25,"endColumn":11},{"ruleId":"323","severity":1,"message":"339","line":33,"column":10,"nodeType":"325","messageId":"326","endLine":33,"endColumn":20},{"ruleId":"323","severity":1,"message":"340","line":33,"column":22,"nodeType":"325","messageId":"326","endLine":33,"endColumn":35},{"ruleId":"323","severity":1,"message":"341","line":38,"column":3,"nodeType":"325","messageId":"326","endLine":38,"endColumn":26},{"ruleId":"323","severity":1,"message":"342","line":39,"column":3,"nodeType":"325","messageId":"326","endLine":39,"endColumn":13},{"ruleId":"323","severity":1,"message":"343","line":40,"column":3,"nodeType":"325","messageId":"326","endLine":40,"endColumn":13},{"ruleId":"323","severity":1,"message":"352","line":66,"column":10,"nodeType":"325","messageId":"326","endLine":66,"endColumn":17},{"ruleId":"344","severity":1,"message":"345","line":88,"column":34,"nodeType":"346","messageId":"347","endLine":88,"endColumn":36},{"ruleId":"319","severity":1,"message":"320","line":158,"column":29,"nodeType":"321","messageId":"322","endLine":158,"endColumn":31},{"ruleId":"323","severity":1,"message":"378","line":161,"column":19,"nodeType":"325","messageId":"326","endLine":161,"endColumn":22},{"ruleId":"344","severity":1,"message":"345","line":165,"column":39,"nodeType":"346","messageId":"347","endLine":165,"endColumn":41},{"ruleId":"319","severity":1,"message":"320","line":191,"column":31,"nodeType":"321","messageId":"322","endLine":191,"endColumn":33},{"ruleId":"344","severity":1,"message":"345","line":195,"column":39,"nodeType":"346","messageId":"347","endLine":195,"endColumn":41},{"ruleId":"348","severity":1,"message":"379","line":208,"column":6,"nodeType":"350","endLine":208,"endColumn":8,"suggestions":"380"},{"ruleId":"344","severity":1,"message":"345","line":292,"column":38,"nodeType":"346","messageId":"347","endLine":292,"endColumn":40},{"ruleId":"323","severity":1,"message":"353","line":316,"column":15,"nodeType":"325","messageId":"326","endLine":316,"endColumn":19},{"ruleId":"319","severity":1,"message":"320","line":318,"column":33,"nodeType":"321","messageId":"322","endLine":318,"endColumn":35},{"ruleId":"323","severity":1,"message":"362","line":2,"column":10,"nodeType":"325","messageId":"326","endLine":2,"endColumn":16},{"ruleId":"323","severity":1,"message":"381","line":4,"column":8,"nodeType":"325","messageId":"326","endLine":4,"endColumn":20},{"ruleId":"323","severity":1,"message":"355","line":9,"column":8,"nodeType":"325","messageId":"326","endLine":9,"endColumn":14},{"ruleId":"323","severity":1,"message":"356","line":10,"column":8,"nodeType":"325","messageId":"326","endLine":10,"endColumn":13},{"ruleId":"323","severity":1,"message":"357","line":13,"column":8,"nodeType":"325","messageId":"326","endLine":13,"endColumn":12},{"ruleId":"323","severity":1,"message":"358","line":16,"column":7,"nodeType":"325","messageId":"326","endLine":16,"endColumn":20},{"ruleId":"319","severity":1,"message":"320","line":64,"column":25,"nodeType":"321","messageId":"322","endLine":64,"endColumn":27},{"ruleId":"344","severity":1,"message":"345","line":66,"column":36,"nodeType":"346","messageId":"347","endLine":66,"endColumn":38},{"ruleId":"323","severity":1,"message":"382","line":96,"column":9,"nodeType":"325","messageId":"326","endLine":96,"endColumn":16},{"ruleId":"319","severity":1,"message":"320","line":101,"column":23,"nodeType":"321","messageId":"322","endLine":101,"endColumn":25},{"ruleId":"323","severity":1,"message":"353","line":114,"column":13,"nodeType":"325","messageId":"326","endLine":114,"endColumn":17},{"ruleId":"319","severity":1,"message":"320","line":115,"column":27,"nodeType":"321","messageId":"322","endLine":115,"endColumn":29},"no-native-reassign",["383"],"no-negated-in-lhs",["384"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'Box' is defined but never used.","Identifier","unusedVar","'IconButton' is defined but never used.","'Link' is defined but never used.","'Icon' is defined but never used.","'FacebookIcon' is defined but never used.","'TwitterIcon' is defined but never used.","'GithubIcon' is defined but never used.","'Tables' is defined but never used.","'classnames' is defined but never used.","'google' is defined but never used.","'ReactDOM' is defined but never used.","'Select' is defined but never used.","'MenuItem' is defined but never used.","'ActionMeta' is defined but never used.","'OnChangeValue' is defined but never used.","'MuiPickersUtilsProvider' is defined but never used.","'TimePicker' is defined but never used.","'DatePicker' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'headers'. Either include it or remove the dependency array.","ArrayExpression",["385"],"'details' is assigned a value but never used.","'Data' is assigned a value but never used.","'colourOptions' is assigned a value but never used.","'Widget' is defined but never used.","'Table' is defined but never used.","'mock' is defined but never used.","'datatableData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchProducts'. Either include it or remove the dependency array.",["386"],"'OutlinedInput' is defined but never used.","'Button' is defined but never used.","'AreaChart' is defined but never used.","'BigStat' is defined but never used.","'mainChartState' is assigned a value but never used.","'setMainChartState' is assigned a value but never used.","'NotificationsIcon' is defined but never used.","'TypographyIcon' is defined but never used.","'UIElementsIcon' is defined but never used.","'SupportIcon' is defined but never used.","'Dot' is defined but never used.","'MailIcon' is defined but never used.","'Badge' is defined but never used.","'isMailsUnread' is assigned a value but never used.","'setIsMailsUnread' is assigned a value but never used.","'isNotificationsUnread' is assigned a value but never used.","'setIsNotificationsUnread' is assigned a value but never used.","'cat' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'headers' and 'ids'. Either include them or remove the dependency array.",["387"],"'MUIDataTable' is defined but never used.","'options' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"388","fix":"389"},{"desc":"390","fix":"391"},{"desc":"392","fix":"393"},"Update the dependencies array to be: [headers]",{"range":"394","text":"395"},"Update the dependencies array to be: [fetchProducts]",{"range":"396","text":"397"},"Update the dependencies array to be: [headers, ids]",{"range":"398","text":"399"},[2348,2350],"[headers]",[2882,2884],"[fetchProducts]",[5750,5752],"[headers, ids]"]